% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tviblindi_S3.R
\name{Pseudotime.tviblindi}
\alias{Pseudotime.tviblindi}
\title{Computes pseudotime, modifies x}
\usage{
\method{Pseudotime}{tviblindi}(
  x,
  K = 30,
  nb_it = 1500,
  iguess = NULL,
  eps = 1e-15,
  kernel = "SEMer",
  kepsilon = NULL,
  sym = "max",
  origin_name = names(x$origin)[1],
  weighted = TRUE,
  method = "cg",
  target = NULL,
  target_values = rep(10^9, length(target)),
  labels_name = 1
)
}
\arguments{
\item{x}{tviblindi class object.}

\item{K}{integer (default 30); number of nearest neighbors to compute transition matrix.}

\item{nb_it}{integer (default 1500); maximum number of iteration of the numerical solver.}

\item{iguess}{numeric vector of the length \code{nrow(x$data)} (default NULL); initialtialisation of the numerical solver.}

\item{eps}{numeric (default 1e-15); relative error of the numerical solver.}

\item{kernel}{character; see \code{knn.adj2spadjsim}.}

\item{kepsilon}{character (default NULL); kernel epsilon.}

\item{sym}{character (default "max"); how to symmetrize the transition matrix (options "none", "max", "min", "mean", "prob").}

\item{origin_name}{character (default names(x$origin)[1]); for which pathway model is the pseudotime calculated.}

\item{weighted}{boolean (default TRUE); calculate expected hitting time (weighted=FLASE) or expected hitting distance.}

\item{method}{character (default "cg"); numerical solver - conjugate gradients (method="cg") or minimal resisual method (method="minres").}

\item{target}{character or integer vector (optional); either label of target populations (cell nearest to the mean of the population will
be consider as target) or indices of target events. Allows to set pseudotime value of given target events.}

\item{target_values}{numeric; prescribed values of target}

\item{labels_name}{character/integer; if is.character(target) - which set of labels should be considered}
}
\value{
returns an invisible tviblindi class object.
}
\description{
\code{Pseudotime}
}
\details{
Computes expected distance of each cell from the cell-of-origin of all random walks in undirected graph of nearest neigbors.
}
