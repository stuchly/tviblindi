% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tvilblindi_core.R
\name{knn.adj.raw}
\alias{knn.adj.raw}
\title{Create an adjacency matrix}
\usage{
knn.adj.raw(XX, K, metric = "euclid")
}
\arguments{
\item{XX}{matrix of coordinates. Rows correspond to vertices.}

\item{K}{number of nearest neighbours.}

\item{metric}{distance metric. \code{euclid} or \code{cosine}.}
}
\value{
\code{knn.adj.raw} returns a list of matrix \code{IND} and matrix \code{DIST}.

\code{IND} contains 0-based indices of each vertex (first column) and its \code{K} nearest neighbours, in the following columns.

\code{DIST} contains the corresponding distances.
}
\description{
\code{knn.adj.raw} generates an adjacency matrix for a K-nearest-neighbours graph. A matrix of neighbour indices and a matrix of neighbour distances are created. Nearest neighbour search is implemented via a vantage-point tree algorithm (Van der Maaten, 2013).
}
\examples{
# create an artificial data set of two clusters in 2-dimensional space
coord <- cbind(c(rnorm(1000,100,20), rnorm(500, 20, 5)), c(rnorm(1000,100,20), rnorm(500, 120, 5)))
coord.adj <- knn.adj.raw(coord, K=5)

# pick some two vertices in the kNN graph and show them and their neighbours on a plot
plot(coord)
points(coord[coord.adj$IND[1,]+1,], col="blue", pch=20)
points(coord[coord.adj$IND[2,]+1,], col="red", pch=20)

}
