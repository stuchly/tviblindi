% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/05_Pseudotime.R
\name{ComputePseudotime.tviblindi}
\alias{ComputePseudotime.tviblindi}
\title{Infer pseudotime for expression data in \code{tviblindi}}
\usage{
\method{ComputePseudotime}{tviblindi}(
  tv,
  name = "default",
  origin_name = 1,
  k = 30,
  kernel = "Exp",
  epsilon = NULL,
  base = 1.5,
  breaks = 100,
  n_iter = 1500
)
}
\arguments{
\item{tv}{\code{tviblindi}-class object}

\item{name}{string: name of generated transition model. Default value is '\code{default}'}

\item{origin_name}{string: name of cell-of-origin to use. Default value is \code{1}}

\item{k}{integer: nearest neighbour count to use for computing transition probabilities. Upper bound is \code{k} of \code{tv$kNN}. Default value is \code{30}}

\item{kernel}{string: name of kernel function to use for constructing the transition model. One of \code{Exp} (exponential), \code{SE} (standard error), \code{Lap} (Laplacian). Default value is \code{Exp}}

\item{epsilon}{number: kernel function parameter (epsilon). Default value is \code{NULL}, whereby a good value of epsilon is estimated automatically}

\item{base}{numeric: penalty of jumping 'too far ahead' in pseudotime, to prevent 'short-circuiting'. Default value is \code{1.5}}

\item{breaks}{integer: number of bins for pseudotime values, for the subsequent simulation of random walks. Default value is \code{100}}

\item{n_iter}{maximum number of iterations for assignment of distance-from-origin to each vertex as the average number of transitions from origin. Usually solved using conjugate gradient (unless the dataset is small). Default value is \code{1500}}
}
\description{
This method adds a new slot \code{pseudotime} to an object of class \code{tviblindi}.
A pseudotime value is assigned to each vertex in \code{data}, based on the cell-of-origin and transition probabilities between vertices.
}
\details{
To avoid short-circuiting in subsequently simulated random walks (which model developmental trajectories), events are divided into equally sized bins (number specified by \code{breaks}).
The probability of jumping \code{k} bins ahead is then penalised by \code{base}^(-k).
}
\references{
\insertRef{Bates2019}{tviblindi}

\insertRef{Bates2014}{tviblindi}

\insertRef{Eddelbuettel2013}{tviblindi}

\insertRef{Csardi2006}{tviblindi}
}
