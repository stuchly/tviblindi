% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/06_Filtration.R
\name{Filter.tviblindi}
\alias{Filter.tviblindi}
\title{Compute filtration and generate boundary matrices}
\usage{
\method{Filter}{tviblindi}(tv, method = "witness", k = 30, alpha = NULL)
}
\arguments{
\item{tv}{\code{tviblindi}-class object with \code{kNN}}

\item{method}{string: type of simplicial complex. Either \code{witness} or \code{alpha}. Default value is \code{witness}. Computing \code{alpha} complex for dimensionality > 5 will probably fail (memory requirements scale badly with dimension of input data)}

\item{k}{integer: nearest neighbour count for finding nearest vertices in \code{denoised} (or \code{data} if \code{denoised} is not available) to SOM cluster centers in \code{codes}}

\item{alpha}{number: relaxation parameter for witness complex. Default value is \code{NULL}, whereby the mean distance between matched vertices in negihbourhoods of \code{k} is taken}
}
\description{
This method adds new slots \code{filtration}, \code{boundary} and \code{reduced_boundary} to an object of class \code{tviblindi}.
In filtration, a simplicial complex is built over the \code{data} point cloud and a filtration value is associated with each simplex.
}
\references{
\insertRef{Edelsbrunner2008}{tviblindi}

\insertRef{Bates2019}{tviblindi}

\insertRef{Rouvreau2020}{tviblindi}

\insertRef{Maria2020}{tviblindi}

\insertRef{Kachanovich2020}{tviblindi}

\insertRef{Bauer2014}{tviblindi}

\insertRef{Fasey2019}{tviblindi}

\insertRef{Eddelbuettel2013}{tviblindi}
}
